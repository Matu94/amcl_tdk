<?xml version="1.0"?>
<launch>
	<!--TF tree launch 
	<param name="robot_description" textfile="$(find lasertf)/urdf/car.urdf" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
	-->
	      

	<!-- RPlidar launch -->
	<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
	<param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
	<param name="serial_baudrate"     type="int"    value="115200"/>
	<param name="frame_id"            type="string" value="laser"/>
	<param name="inverted"            type="bool"   value="false"/>
	<param name="angle_compensate"    type="bool"   value="true"/>
	</node>


	<!-- Laser filter launch
	<node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
	<rosparam command="load" file="$(find laser_filters)/launch/laserscan_filter.yaml" />
	</node>
	 -->

	<!-- Hector_SLAM launch -->
	<arg name="geotiff_map_file_path" default="$(find hector_geotiff)/maps"/>
	<param name="/use_sim_time" value="false"/>
	<include file="$(find hector_mapping)/launch/mapping_default.launch"/>
	<include file="$(find hector_geotiff)/launch/geotiff_mapper.launch">
	<arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
	<arg name="map_file_path" value="$(arg geotiff_map_file_path)"/>
	</include>

</launch>
