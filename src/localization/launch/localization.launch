<?xml version="1.0"?>

<launch>

	
	<node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.0 0.0 3.14 0.0 0.0 0.0 /base_link /laser 100"/> 
	<node pkg="tf" type="static_transform_publisher" name="w_to_m" args="0.0 0.0 0.0 0.0 0.0 0.0 /world /map  100"/> 
	<node pkg="tf" type="static_transform_publisher" name="m_to_o" args="0.0 0.0 0.0 0.0 0.0 0.0 /map /odom  100"/> 	
	<!--node pkg="tf" type="static_transform_publisher" name="o_to_b" args="0.0 0.0 0.0 0.0 0.0 0.0 /odom /base_link  40"/-->
	<!--node pkg="tf" type="static_transform_publisher" name="o_to_b" args="0.0 0.0 0.0 0.0 0.0 0.0 /odom /base_footprint  40"/>
	<node pkg="tf" type="static_transform_publisher" name="b_to_b" args="0.0 0.0 0.0 0.0 0.0 0.0 /base_footprint /base_link  40"/-->
	 
	<!-- 
	<param name="robot_description" textfile="$(find lasertf)/urdf/car.urdf" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
	-->
      	
	<arg name="map_file" default="$(find localization)/tdk1.yaml"/>

  	<!-- Run the map server -->
 	 <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

	<!-- RPlidar launch -->
	<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
	<param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
	<param name="serial_baudrate"     type="int"    value="115200"/>
	<param name="frame_id"            type="string" value="laser"/>
	<param name="inverted"            type="bool"   value="false"/>
	<param name="angle_compensate"    type="bool"   value="true"/>
	</node>


	<!-- Scan matcher launch -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find laser_scan_matcher)/demo/demo.rviz"/>
	<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">

	<!-- Topics -->
	<remap from="scan" to="scan"/>
	<!--remap from="cloud" to="/camera/depth/points"/>
	<remap from="imu/data" to="imu/data_compass"/-->
	<remap from="odom" to="odom"/>
	<remap from="vel" to="/mobile_base_controller/cmd_vel" />
	
	<!-- Coordinate frames -->
	<param name="fixed_frame" value="/map" />
	<param name="base_frame" value="base_link" />
	
	<!-- Motion prediction -->
	<param name="use_imu" value="false"/>
	<param name="use_odom" value="false"/>
	<param name="use_vel" value="false"/>
	
	<!-- Point cloud input -->
	<param name="use_cloud_input" value="false"/>
	<param name="cloud_range_min" value="0.4"/>
	<param name="cloud_range_max" value="10.0"/>
	
	<!-- Key frames -->
	<param name="kf_dist_linear" value="0.1"/>
	<param name="kf_dist_angular" value="0.175"/>
	
	<!-- Output -->
	<param name="publish_tf" value="true"/>
	<param name="publish_odom" value="true"/>
	<param name="publish_pose" value="true"/>
	<param name="publish_pose_stamped" value="false"/>
	
	<!-- Scan matching -->
	<param name="max_iterations" value="50"/>
	<param name="max_correspondence_dist" value="0.3"/>
	<param name="max_angular_correction_deg" value="45.0"/>
	<param name="max_linear_correction" value="0.5"/>
	<param name="epsilon_xy" value="0.000001"/>
	<param name="epsilon_theta" value="0.000001"/>
	<param name="outliers_maxPerc" value="0.90"/>


	<param name="use_alpha_beta" value="true"/>
	</node>

	<!-- AMCL diff launch>
	<node pkg="amcl" type="amcl" name="amcl" output="screen">
  	<param name="odom_model_type" value="diff"/>
	<param name="odom_alpha5" value="0.1"/>
	<param name="transform_tolerance" value="0.2" />
	<param name="gui_publish_rate" value="10.0"/>
	<param name="laser_max_beams" value="30"/>
	<param name="min_particles" value="500"/>
	<param name="max_particles" value="5000"/>
	<param name="kld_err" value="0.05"/>
	<param name="kld_z" value="0.99"/>
	<param name="odom_alpha1" value="0.2"/>
	<param name="odom_alpha2" value="0.2"/>
	<param name="odom_alpha3" value="0.8"/>
	<param name="odom_alpha4" value="0.2"/>
	<param name="laser_z_hit" value="0.5"/>
	<param name="laser_z_short" value="0.05"/>
	<param name="laser_z_max" value="0.05"/>
	<param name="laser_z_rand" value="0.5"/>
	<param name="laser_sigma_hit" value="0.2"/>
	<param name="laser_lambda_short" value="0.1"/>
	<param name="laser_lambda_short" value="0.1"/>
	<param name="laser_model_type" value="likelihood_field"/>
	<param name="laser_likelihood_max_dist" value="2.0"/>
	<param name="update_min_d" value="0.2"/>
	<param name="update_min_a" value="0.5"/>
	<param name="odom_frame_id" value="odom"/>
	<param name="resample_interval" value="1"/>
	<param name="transform_tolerance" value="0.1"/>
	<param name="recovery_alpha_slow" value="0.0"/>
	<param name="recovery_alpha_fast" value="0.0"/>
	</node-->

<node pkg="amcl" type="amcl" name="amcl">
  
  <param name="odom_model_type" value="omni"/>
  <param name="odom_alpha5" value="0.1"/>
  <param name="transform_tolerance" value="0.2" />
  <param name="gui_publish_rate" value="10.0"/>
  <param name="laser_max_beams" value="30"/>
  <param name="min_particles" value="500"/>
  <param name="max_particles" value="5000"/>
  <param name="kld_err" value="0.05"/>
  <param name="kld_z" value="0.99"/>
  <param name="odom_alpha1" value="0.2"/>
  <param name="odom_alpha2" value="0.2"/>
  
  <param name="odom_alpha3" value="0.8"/>
  <param name="odom_alpha4" value="0.2"/>
  <param name="laser_z_hit" value="0.5"/>
  <param name="laser_z_short" value="0.05"/>
  <param name="laser_z_max" value="0.05"/>
  <param name="laser_z_rand" value="0.5"/>
  <param name="laser_sigma_hit" value="0.2"/>
  <param name="laser_lambda_short" value="0.1"/>
  <param name="laser_lambda_short" value="0.1"/>
  <param name="laser_model_type" value="likelihood_field"/>

  <param name="laser_likelihood_max_dist" value="2.0"/>
  <param name="update_min_d" value="0.2"/>
  <param name="update_min_a" value="0.5"/>
  <param name="odom_frame_id" value="odom"/>
  <param name="resample_interval" value="1"/>
  <param name="transform_tolerance" value="0.1"/>
  <param name="recovery_alpha_slow" value="0.0"/>
  <param name="recovery_alpha_fast" value="0.0"/>
</node>

</launch>
